import{c as q,d as r,o as c,h as i,q as u,k as d,u as n,f as p,H as R,M as z,r as f}from"./index-BBuGe3RL.js";/**
 * @license lucide-vue-next v0.473.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const G=q("CircleAlertIcon",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["line",{x1:"12",x2:"12",y1:"8",y2:"12",key:"1pkeuh"}],["line",{x1:"12",x2:"12.01",y1:"16",y2:"16",key:"4dfq90"}]]),H=r({__name:"Card",props:{class:{}},setup(a){const s=a;return(l,o)=>(c(),i("div",{class:d(n(p)("rounded-lg border bg-card text-card-foreground shadow-sm",s.class))},[u(l.$slots,"default")],2))}}),J=r({__name:"CardContent",props:{class:{}},setup(a){const s=a;return(l,o)=>(c(),i("div",{class:d(n(p)("p-6 pt-0",s.class))},[u(l.$slots,"default")],2))}}),V=r({__name:"CardDescription",props:{class:{}},setup(a){const s=a;return(l,o)=>(c(),i("p",{class:d(n(p)("text-sm text-muted-foreground",s.class))},[u(l.$slots,"default")],2))}}),j=r({__name:"CardHeader",props:{class:{}},setup(a){const s=a;return(l,o)=>(c(),i("div",{class:d(n(p)("flex flex-col gap-y-1.5 p-6",s.class))},[u(l.$slots,"default")],2))}}),K=r({__name:"CardTitle",props:{class:{}},setup(a){const s=a;return(l,o)=>(c(),i("h3",{class:d(n(p)("text-2xl font-semibold leading-none tracking-tight",s.class))},[u(l.$slots,"default")],2))}}),P=r({__name:"Alert",props:{class:{},variant:{}},setup(a){const s=a;return(l,o)=>(c(),i("div",{class:d(n(p)(n(O)({variant:l.variant}),s.class)),role:"alert"},[u(l.$slots,"default")],2))}}),U=r({__name:"AlertDescription",props:{class:{}},setup(a){const s=a;return(l,o)=>(c(),i("div",{class:d(n(p)("text-sm [&_p]:leading-relaxed",s.class))},[u(l.$slots,"default")],2))}}),O=R("relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",{variants:{variant:{default:"bg-background text-foreground",destructive:"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive"}},defaultVariants:{variant:"default"}}),y="flashcardConfig",M={saveConfig(a){localStorage.setItem(y,JSON.stringify(a))},loadConfig(){const a=localStorage.getItem(y);if(!a)return null;try{return JSON.parse(a)}catch(s){return console.error("Failed to parse stored config:",s),null}},clearConfig(){localStorage.removeItem(y)}},h={flashcardIdColumn:"",reviewedAtColumn:"",ratingColumn:"",stateColumn:"",dueColumn:"",stabilityColumn:"",difficultyColumn:"",elapsedDaysColumn:"",scheduledDaysColumn:"",lastElapsedDaysColumn:""},b={questionColumn:"",answerColumn:"",questionAudioColumn:"",questionAudioStartColumn:"",questionAudioEndColumn:"",answerAudioColumn:"",answerAudioStartColumn:"",answerAudioEndColumn:"",lastReviewColumn:"",stateColumn:"",dueDateColumn:"",stabilityColumn:"",difficultyColumn:"",elapsedDaysColumn:"",scheduledDaysColumn:"",repsColumn:"",lapsesColumn:""},Y=z("grist",()=>{const a=f({flashcardTable:"",flashcardMapping:{...b},reviewLogTable:"",reviewLogMapping:{...h}}),s=f([]),l=f([]),o=f([]),w=f(!1),v=f(""),_=async()=>{a.value.flashcardTable&&(l.value=await L(a.value.flashcardTable))},T=async()=>{a.value.reviewLogTable&&(o.value=await L(a.value.reviewLogTable))},L=async e=>{try{const t=await grist.docApi.getAccessToken({readOnly:!0}),g=await fetch(`${t.baseUrl}/tables/${e}/columns?auth=${t.token}`);if(!g.ok)throw new Error("Failed to fetch columns");return(await g.json()).columns.map(C=>({id:C.id,name:C.fields.label,type:C.fields.type.split(":")[0],fields:{label:C.fields.label}}))}catch(t){return console.error("Error loading table columns:",t),v.value=t instanceof Error?t.message:"Failed to load table columns",[]}},x=async()=>{w.value=!0,v.value="";try{const e=await grist.docApi.listTables();s.value=e.map(t=>({id:t})),await I()}catch(e){console.error("Error in loadTables:",e),v.value=e instanceof Error?e.message:"Failed to load tables",s.value=[]}finally{w.value=!1}},$=async e=>{a.value.flashcardTable=e,await _(),m()},A=async e=>{a.value.reviewLogTable=e,await T(),m()},k=e=>{const t=a.value.flashcardMapping[e];return l.value.find(g=>g.id===t)},E=e=>{const t=a.value.reviewLogMapping[e];return o.value.find(g=>g.id===t)},S=(e,t)=>{a.value.flashcardMapping[e]=t,m()},F=(e,t)=>{a.value.reviewLogMapping[e]=t,m()},I=async()=>{(a.value.flashcardTable||a.value.reviewLogTable)&&await Promise.all([_(),T()])},D=async()=>{try{const e=M.loadConfig();e?a.value={flashcardTable:e.flashcardTable,flashcardMapping:{...b,...e.flashcardMapping},reviewLogTable:e.reviewLogTable,reviewLogMapping:{...h,...e.reviewLogMapping}}:a.value={flashcardTable:"",flashcardMapping:{...b},reviewLogTable:"",reviewLogMapping:{...h}}}catch(e){console.error("Error loading configuration:",e),a.value={flashcardTable:"",flashcardMapping:{...b},reviewLogTable:"",reviewLogMapping:{...h}}}},m=async()=>{try{return M.saveConfig(a.value),!0}catch(e){return console.error("Error saving configuration:",e),v.value=e instanceof Error?e.message:"Failed to save configuration",!1}};return{config:a,tables:s,flashcardColumns:l,reviewLogColumns:o,loading:w,error:v,loadTables:x,handleFlashcardTableChange:$,handleReviewLogTableChange:A,getMappedFlashcardColumn:k,getMappedReviewLogColumn:E,updateFlashcardMapping:S,updateMapping:F,loadConfig:D,saveConfig:m}});export{G as C,U as _,P as a,K as b,V as c,j as d,J as e,H as f,Y as u};
